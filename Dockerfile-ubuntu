ARG DISTRO="ubuntu"
ARG VERSION="latest"
ARG GUNBOTVERSION="latest"
ARG GITHUBOWNER="GuntharDeNiro"
ARG GITHUBREPO="BTCT"
ARG GUNBOTDIR="/tmp/gunbot"
ARG GUNBOTSERVICEDESC="gunbot, an automated crypto trading bot"
ARG GUNBOTSERVICEFILE="/etc/systemd/system/gunbot.service"
ARG GUNBOTPORT="5000"
ARG STARTUP="/tmp/startup.sh"

FROM alpine:latest AS gunbot-builder
ARG GUNBOTVERSION
ARG GITHUBOWNER
ARG GITHUBREPO

WORKDIR /tmp

RUN apk update \
  && apk add --no-cache wget jq unzip \
  && rm -rf /var/lib/apt/lists/* \
  && wget -q -nv -O gunbot.zip $(wget -q -nv -O- https://api.github.com/repos/${GITHUBOWNER}/${GITHUBREPO}/releases/${GUNBOTVERSION} 2>/dev/null |  jq -r '.assets[] | select(.browser_download_url | contains("lin")) | .browser_download_url') \
  && unzip -d . gunbot.zip \
  && mv lin* gunbot


FROM ${DISTRO}:${VERSION}
ARG DISTRO
ARG VERSION
ARG GUNBOTVERSION
ARG GUNBOTDIR
ARG GUNBOTSERVICEDESC
ARG GUNBOTSERVICEFILE
ARG GUNBOTPORT
ARG STARTUP

LABEL \
  maintainer="computeronix" \
  website="https://aka.wf/ai6" \
  description="docker file ${DISTRO} - ${VERSION}, containerized gunbot - ${GUNBOTVERSION}"

RUN apt-get update \
  && apt-get -y install systemctl chrony rsync fontconfig \
  && rm -rf /var/lib/apt/lists/*

COPY --from=gunbot-builder /tmp/gunbot /opt/gunbot

RUN printf "[Unit]\n" >> ${GUNBOTSERVICEFILE} \
  && printf "Description=${GUNBOTSERVICEDESC}\n" >> ${GUNBOTSERVICEFILE} \
  && printf "After=network-online.target\n" >> ${GUNBOTSERVICEFILE} \
  && printf "\n" >> ${GUNBOTSERVICEFILE} \
  && printf "[Service]\n" >> ${GUNBOTSERVICEFILE} \
  && printf "Type=simple\n" >> ${GUNBOTSERVICEFILE} \
  && printf "WorkingDirectory=${GUNBOTDIR}\n" >> ${GUNBOTSERVICEFILE} \
  && printf "ExecStart=${GUNBOTDIR}/gunthy-linux\n" >> ${GUNBOTSERVICEFILE} \
  && printf "Restart=on-failure\n" >> ${GUNBOTSERVICEFILE} \
  && printf "\n" >> ${GUNBOTSERVICEFILE} \
  && printf "[Install]\n" >> ${GUNBOTSERVICEFILE} \
  && printf "WantedBy=multi-user.target\n" >> ${GUNBOTSERVICEFILE} \
  && systemctl disable --now gunbot \
  && systemctl disable --now chrony \
  && printf "#!/bin/sh\n" >> ${STARTUP} \
  && printf "\n" >> ${STARTUP} \
  && printf "echo syncing mounted host content with container...\n" >> ${STARTUP} \
  && printf "rsync -r --ignore-existing --backup-dir=/tmp/backup --progress --log-file=/tmp/logfile.log /opt/gunbot /tmp \n" >> ${STARTUP} \
  && printf "rsync -ru --backup-dir=/tmp/backup --progress --exclude-from=/tmp/exclude.txt --log-file=/tmp/logfile.log /opt/gunbot /tmp \n" >> ${STARTUP} \
  && printf "echo starting services...\n" >> ${STARTUP} \
  && printf "systemctl enable --now chrony\n" >> ${STARTUP} \
  && printf "systemctl enable --now gunbot\n" >> ${STARTUP} \
  && printf "\n" >> ${STARTUP} \
  && printf "while sleep 60; do\n" >> ${STARTUP} \
  && printf "echo still running...\n" >> ${STARTUP} \
  && printf "done\n" >> ${STARTUP} \
  && chmod +x ${STARTUP} \
  && printf "UTAconfig.json\n" >> /tmp/exclude.txt \
  && printf "autoconfig.json\n" >> /tmp/exclude.txt \
  && printf "backups\n" >> /tmp/exclude.txt \
  && printf "config.js\n" >> /tmp/exclude.txt \
  && printf "gunbotgui.db\n" >> /tmp/exclude.txt \
  && printf "json\n" >> /tmp/exclude.txt \
  && printf "logs\n" >> /tmp/exclude.txt \
  && printf "new_gui.sqlite\n" >> /tmp/exclude.txt

EXPOSE ${GUNBOTPORT}
VOLUME ["/tmp/gunbot"]
CMD ["/tmp/startup.sh"]
